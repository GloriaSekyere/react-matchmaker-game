{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","useEffect","shuffleCards","prevCards","map","setTimeout","resetTurn","shuffledCards","sort","Math","random","id","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAwBeA,EArBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAQjD,OACE,sBAAKC,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACEF,UAAU,OACVC,IAAI,iBACJC,IAAI,YACJC,QAbc,WACbJ,GACHF,EAAaD,UCHbQ,EAAa,CACjB,CAACH,IAAK,oBAAqBI,SAAS,GACpC,CAACJ,IAAK,oBAAqBI,SAAS,GACpC,CAACJ,IAAK,kBAAmBI,SAAS,GAClC,CAACJ,IAAK,oBAAqBI,SAAS,GACpC,CAACJ,IAAK,oBAAqBI,SAAS,GACpC,CAACJ,IAAK,mBAAoBI,SAAS,IAgFtBC,MA7Ef,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAEAC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACJL,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAU,GACP,OAAOA,EAAUC,KAAI,SAAAxB,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIbyB,YAAW,kBAAMC,MAAa,MAG9BD,YAAW,kBAAMC,MAAa,QAGjC,CAACV,EAAWE,IAEf,IAAMI,EAAe,WACnB,IAAMK,EAAgB,UAAInB,EAAeA,GACtCoB,MAAK,kBAAMC,KAAKC,SAAW,MAC3BN,KAAI,SAAAxB,GAAI,kCAASA,GAAT,IAAe+B,GAAIF,KAAKC,cAEnCb,EAAa,MACbE,EAAa,MACbN,EAASc,GACTZ,EAAS,IAGLd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAG1C0B,EAAY,WAChBT,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAS,OAAIA,EAAY,KAClCZ,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASe,EAAjB,sBAEA,qBAAKlB,UAAU,QAAf,SACGQ,EAAMY,KAAI,SAAAxB,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK+B,SAShB,0CAAajB,SChFnBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eeddd201.chunk.js","sourcesContent":["import React from 'react';\nimport './SingleCard.css';\n\nconst SingleCard = ({ card, handleChoice, flipped, disabled }) => {\n\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card)\n    }\n  }\n\n  return (\n    <div className={flipped ? \"flipped\" : \"\"}>\n      <img className='front' src={card.src} alt=\"card front\" />\n      <img \n        className='back' \n        src=\"/img/cover.png\" \n        alt=\"card back\"\n        onClick={handleClick}\n      />\n    </div>\n  )\n}\n\nexport default SingleCard","import { useState, useEffect } from 'react';\nimport './App.css'\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  {src: '/img/helmet-1.png', matched: false},\n  {src: '/img/potion-1.png', matched: false},\n  {src: '/img/ring-1.png', matched: false},\n  {src: '/img/scroll-1.png', matched: false},\n  {src: '/img/shield-1.png', matched: false},\n  {src: '/img/sword-1.png', matched: false}\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        setTimeout(() => resetTurn(), 1000)\n      } \n      else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map(card => ({...card, id: Math.random()}))\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='cards'>\n        {cards.map(card => (\n          <SingleCard \n            key={card.id} \n            card={card}\n            handleChoice={handleChoice} \n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n\n      <div>Turns: {turns}</div>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}